name: "Full-stack tests"

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * *"

defaults:
  run:
    shell: bash -leo pipefail {0} {0}

jobs:
  test:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macOS-latest, ubuntu-latest]
        style: ["deployment", "bleeding-edge"]
        python-version: ["3.9", "3.10", "3.11"]

    env:
      OE_LICENSE: ${{ github.workspace }}/oe_license.txt

    steps:
    - uses: actions/checkout@v4

    # Each of these checkouts can be done on a feature branch
    # https://github.com/actions/checkout#checkout-a-different-branch

    # Only check out the repos whose tests directly run; development
    # installs of other packages are brought in via pip via micromamba
    - name: Set up conda environment
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-file: devtools/conda-envs/full.yaml
        create-args: python=${{ matrix.python-version }}

    # Here's where one could check out against feature branches
    - name: Installing "bleeding edge" versions of some packages
      if: matrix.style == 'bleeding-edge'
      run: |
        python -m pip install \
          git+https://github.com/openforcefield/openff-toolkit.git@main \
          git+https://github.com/openforcefield/openff-interchange.git@main \
          git+https://github.com/openforcefield/openff-fragmenter.git@main \
          git+https://github.com/openforcefield/openff-qcsubmit.git@main \
          git+https://github.com/openforcefield/openff-nagl.git@main \
          git+https://github.com/openforcefield/openff-utilities.git@main \
          git+https://github.com/openforcefield/openff-units.git@main \
          git+https://github.com/openforcefield/openff-models.git@main

    - name: Make oe_license.txt file from GH org secret "OE_LICENSE"
      env:
        OE_LICENSE_TEXT: ${{ secrets.OE_LICENSE }}
      run: echo "${OE_LICENSE_TEXT}" > ${OE_LICENSE}

    - name: Run tests via pyargs
      run: |
        python -m pytest -nauto \
          --pyargs "openff.toolkit" \
          --pyargs "openff.interchange" \
          --pyargs "openff.fragmenter" \
          --pyargs "openff.qcsubmit" \
          --pyargs "openff.nagl" \
          --pyargs "openff.utilities" \
          --pyargs "openff.units" \
          --pyargs "openff.models"
